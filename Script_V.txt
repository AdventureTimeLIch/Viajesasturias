<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Asistente Virtual con ID de Usuario</title>
  <style>
    #chat-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 350px;
      height: 500px;
      border: 2px solid #ccc;
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    #chat-header {
      background-color: #4CAF50;
      color: white;
      padding: 10px;
      text-align: center;
      font-size: 18px;
      border-radius: 10px 10px 0 0;
    }

    #chat-box {
      height: 380px;
      overflow-y: auto;
      padding: 10px;
      background-color: #f1f1f1;
    }

    #user-input {
      width: 100%;
      padding: 10px;
      border: none;
      border-top: 1px solid #ccc;
      box-sizing: border-box;
    }

    .message {
      margin: 10px 0;
      padding: 8px;
      border-radius: 5px;
    }

    .user-message {
      background-color: #e1f5fe;
      text-align: right;
    }

    .bot-message {
      background-color: #e0e0e0;
      text-align: left;
    }
  </style>
</head>
<body>

  <div id="chat-container">
    <div id="chat-header">Asistente Virtual</div>
    <div id="chat-box"></div>
    <input type="text" id="user-input" placeholder="Escribe un mensaje..." onkeydown="if(event.key === 'Enter'){sendMessage();}" />
  </div>

  <script>
    // Obtener elementos por ID
    const chatBox = document.getElementById('chat-box');
    const userInput = document.getElementById('user-input');

    // Aquí, asumiendo que tienes un ID único para cada sesión de usuario
    const userID = "usuario123"; // Este ID debería generarse de manera dinámica, por ejemplo, mediante el inicio de sesión

    // Función para enviar el mensaje
    function sendMessage() {
      const message = userInput.value.trim();
      if (message) {
        displayMessage(message, 'user');
        userInput.value = ''; // Limpiar la entrada
        fetchBotResponse(message); // Llamar a la API del asistente
      }
    }

    // Función para mostrar los mensajes en el chat
    function displayMessage(message, sender) {
      const messageDiv = document.createElement('div');
      messageDiv.classList.add('message');
      messageDiv.classList.add(sender === 'user' ? 'user-message' : 'bot-message');
      messageDiv.textContent = message;
      chatBox.appendChild(messageDiv);
      chatBox.scrollTop = chatBox.scrollHeight; // Mantener el scroll en el fondo
    }

    // Función para interactuar con la API del asistente
    function fetchBotResponse(userMessage) {
      fetch('https://api.tu-asistente.com/responder', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          user_id: e2c86bf8-83cc-45e5-8094-266b4b605ebe, // Pasando el ID de usuario para mantener el contexto
          mensaje: userMessage
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.respuesta) {
          displayMessage(data.respuesta, 'bot');
        } else {
          displayMessage('Lo siento, no pude entender eso.', 'bot');
        }
      })
      .catch(error => {
        displayMessage('Hubo un error. Por favor, inténtalo más tarde.', 'bot');
      });
    }
  </script>

</body>
</html>
